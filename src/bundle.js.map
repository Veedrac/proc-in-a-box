{"version":3,"file":"bundle.js","sources":["tutorial.ts","engine.ts","backends/gpu-wires-renderer.ts","backends/gpu-wires-decoder.ts","utils/setZeroTimeout.ts","backends/gpu.ts"],"sourcesContent":["import { Engine } from './engine';\n\nconst scheduler = new Engine();\n\nconst linelogic_area = document.getElementsByClassName(\"linelogic\");\nfor (var i = 0; i < linelogic_area.length; i++) {\n    const area = linelogic_area[i];\n    if (!(area instanceof HTMLImageElement)) {\n        continue;\n    }\n\n    if (area.complete) {\n        setTimeout(() => scheduler.load(area), 0);\n    } else {\n        area.onload = () => scheduler.load(area);\n    }\n}\n","import { Gpu } from './backends/gpu';\nimport * as gpuWiresDecoder from './backends/gpu-wires-decoder';\nimport { GpuWiresRenderer } from './backends/gpu-wires-renderer';\n\nconst decoder = gpuWiresDecoder;\nconst renderer = GpuWiresRenderer;\n\nexport class Engine {\n    async load(img: HTMLImageElement) {\n        const [width, height] = [img.naturalWidth, img.naturalHeight];\n\n        const canvas = document.createElement('canvas');\n        canvas.width = width / 10;\n        canvas.height = height / 10;\n        canvas.style.width = (img.width / 10).toString();\n        canvas.style.height = (img.height / 10).toString();\n\n        const context = new Gpu(canvas);\n        /* dbg */ (<any>window).context = context;\n\n        const subState = await decoder.bootstrapFromImageTag(img);\n        const subRenderer = new renderer(context);\n        subRenderer.initialize(width, height, subState);\n\n        subRenderer.animate();\n        img.replaceWith(canvas);\n        subRenderer.step();\n        // requestIdleCallback(subRenderer.step);\n        // while (deadline.timeRemaining() > 0.6) {\n    };\n};\n","import { Gpu } from './gpu';\nimport { GpuRepresentation } from './gpu-wires-decoder';\n\nconst vs = `#version 300 es\n    precision mediump float;\n    precision mediump int;\n\n    in vec2 a_triangleCoordinates;\n\n    void main() {\n      gl_Position = vec4(a_triangleCoordinates, 0, 1);\n    }\n`;\n\nconst renderFs = `#version 300 es\n    precision mediump float;\n    precision mediump int;\n\n    uniform highp float u_scale;\n    uniform highp vec2 u_offset;\n\n    uniform lowp    usampler2D u_wireStates;\n    uniform mediump usampler2D u_imageDecoder;\n    uniform mediump usampler2D u_imageDecoderExtra;\n    out vec4 color;\n\n    bool wireState(uint idx) {\n        idx &= 0x7FFFFFFFu;\n        uint subidx = idx & 7u;\n        idx >>= 3u;\n\n        return (texelFetch(u_wireStates, ivec2(idx & 127u, idx >> 7u), 0).r & (1u << subidx)) > 0u;\n    }\n\n    void main() {\n        vec2 where = gl_FragCoord.xy * u_scale + u_offset;\n        uint x = uint(where.x);\n        uint y = uint(where.y);\n\n        uint wireIdx1 = texelFetch(u_imageDecoder, ivec2(x, y), 0).r;\n        if (wireIdx1 == 0u) {\n            if ((x & 31u) == 0u || (y & 31u) == 0u) {\n                color = vec4(0.9, 0.9, 0.9, 1);\n                return;\n            } else {\n                color = vec4(1.0, 1.0, 1.0, 1);\n                return;\n            }\n        }\n\n        uint luminance = wireState(wireIdx1) ? 2u : 0u;\n\n        if ((wireIdx1 & 0x80000000u) != 0u) {\n            uint wireIdx2 = texelFetch(u_imageDecoderExtra, ivec2(x >> 2u, y), 0).r;\n            luminance = (luminance >> 1u) + (wireState(wireIdx2) ? 1u : 0u);\n        }\n\n        if (luminance == 2u) {\n            color = vec4(1.0, 0, 0, 1);\n        } else if (luminance == 1u) {\n            color = vec4(0.71, 0.35, 0.71, 1);\n        } else {\n            color = vec4(0.0, 0.5, 1.0, 1);\n        }\n    }\n`;\n\nconst stepFs = `#version 300 es\n    precision mediump float;\n    precision mediump int;\n\n    uniform lowp usampler2D u_wireStates;\n    uniform mediump usampler2D u_incomingWires;\n    uniform mediump usampler2D u_incomingWireGroupsOff;\n    uniform lowp    usampler2D u_incomingWireGroupsLen;\n\n    out lowp uint color;\n\n    void main() {\n        uint x = uint(gl_FragCoord.x) << 3u;\n        uint y = uint(gl_FragCoord.y);\n\n        color = 0u;\n\n        uint wireGroup   = uint(texelFetch(u_incomingWireGroupsOff, ivec2(x >> 3u, y), 0).r);\n        for (uint subwire = 0u; subwire < 8u; subwire++, x++) {\n            uint groupLength = uint(texelFetch(u_incomingWireGroupsLen, ivec2(x, y), 0).r);\n\n            for (uint i = 0u; i < groupLength; i++) {\n                uint idx = wireGroup + i;\n                uint wireIdx = texelFetch(u_incomingWires, ivec2(idx & 1023u, idx >> 10u), 0).r;\n\n                uint subidx = wireIdx & 7u;\n                wireIdx >>= 3;\n\n                uint texel = texelFetch(u_wireStates, ivec2(wireIdx & 127u, wireIdx >> 7u), 0).r;\n                if (!((texel & (1u << subidx)) > 0u)) {\n                    color |= 1u << subwire;\n                    break;\n                }\n            }\n\n            wireGroup += groupLength;\n        }\n    }\n`;\n\nexport class GpuWiresRenderer {\n    ctx: Gpu;\n    width: number;\n    height: number;\n    numWires: number;\n\n    n: number;\n    t: number;\n    sync: WebGLSync[];\n\n    scale: number;\n    mul: number;\n    offset: number;\n\n    renderProgram: WebGLProgram;\n    a_triangleCoordinates: WebGLUniformLocation;\n    u_render_scale: WebGLUniformLocation;\n    u_render_offset: WebGLUniformLocation;\n    u_render_wireStates: WebGLUniformLocation;\n    u_render_imageDecoder: WebGLUniformLocation;\n    u_render_imageDecoderExtra: WebGLUniformLocation;\n\n    stepProgram: WebGLProgram;\n    u_step_wireStates: WebGLUniformLocation;\n    u_step_incomingWires: WebGLUniformLocation;\n    u_step_incomingWireGroupsOff: WebGLUniformLocation;\n    u_step_incomingWireGroupsLen: WebGLUniformLocation;\n    framebuffer: WebGLUniformLocation;\n\n    imageDecoderIdx: number;\n    imageDecoderExtraIdx: number;\n    incomingWiresIdx: number;\n    incomingWireGroupsOffIdx: number;\n    incomingWireGroupsLenIdx: number;\n\n    wireStatesCurrTex: WebGLTexture;\n    wireStatesCurrIdx: number;\n    wireStatesNextTex: WebGLTexture;\n    wireStatesNextIdx: number;\n\n    constructor(ctx: Gpu) {\n        this.ctx = ctx;\n\n        this.sync = [];\n        this.n = 0;\n        this.t = performance.now();\n\n        this.scale = 1;\n        this.mul = 1.003;\n        this.offset = 0;\n    }\n\n    async initialize(width: number, height: number, graph: GpuRepresentation) {\n        const gl = this.ctx.gl;\n        this.width = width;\n        this.height = height;\n        this.numWires = graph.wireStates.length;\n\n        if (!gl.getExtension(\"EXT_color_buffer_float\")) {\n            alert(\"Floating point textures not supported!\");\n        }\n        gl.disable(gl.BLEND);\n\n        this.renderProgram = this.ctx.createProgram(vs, renderFs);\n        this.a_triangleCoordinates = gl.getAttribLocation (this.renderProgram, \"a_triangleCoordinates\");\n        this.u_render_scale        = gl.getUniformLocation(this.renderProgram, \"u_scale\");\n        this.u_render_offset       = gl.getUniformLocation(this.renderProgram, \"u_offset\");\n        this.u_render_wireStates   = gl.getUniformLocation(this.renderProgram, \"u_wireStates\");\n        this.u_render_imageDecoder = gl.getUniformLocation(this.renderProgram, \"u_imageDecoder\");\n        this.u_render_imageDecoderExtra = gl.getUniformLocation(this.renderProgram, \"u_imageDecoderExtra\");\n\n        this.stepProgram = this.ctx.createProgram(vs, stepFs);\n        this.u_step_wireStates     = gl.getUniformLocation(this.stepProgram, \"u_wireStates\");\n        this.u_step_incomingWires  = gl.getUniformLocation(this.stepProgram, \"u_incomingWires\");\n        this.u_step_incomingWireGroupsOff = gl.getUniformLocation(this.stepProgram, \"u_incomingWireGroupsOff\");\n        this.u_step_incomingWireGroupsLen = gl.getUniformLocation(this.stepProgram, \"u_incomingWireGroupsLen\");\n        this.framebuffer = gl.createFramebuffer();\n\n\n        let textureId = 0;\n\n        gl.activeTexture(gl.TEXTURE0 + textureId);\n        this.ctx.textureCreateAndBind(\n            [width, height], gl.R32UI, gl.RED_INTEGER, gl.UNSIGNED_INT, graph.imageDecoder\n        );\n        this.imageDecoderIdx = textureId;\n        textureId++;\n\n        gl.activeTexture(gl.TEXTURE0 + textureId);\n        this.ctx.textureCreateAndBind(\n            [Math.ceil(width >> 2), height], gl.R32UI, gl.RED_INTEGER, gl.UNSIGNED_INT, graph.imageDecoderExtra\n        );\n        this.imageDecoderExtraIdx = textureId;\n        textureId++;\n\n        gl.activeTexture(gl.TEXTURE0 + textureId);\n        this.ctx.textureCreateAndBind(\n            [1024, graph.incomingWires.length >> 10], gl.R32UI, gl.RED_INTEGER, gl.UNSIGNED_INT, graph.incomingWires\n        );\n        this.incomingWiresIdx = textureId;\n        textureId++;\n\n        gl.activeTexture(gl.TEXTURE0 + textureId);\n        this.ctx.textureCreateAndBind(\n            [128, graph.incomingWireGroupsOff.length >> 7], gl.R32UI, gl.RED_INTEGER, gl.UNSIGNED_INT, graph.incomingWireGroupsOff\n        );\n        this.incomingWireGroupsOffIdx = textureId;\n        textureId++;\n\n        gl.activeTexture(gl.TEXTURE0 + textureId);\n        this.ctx.textureCreateAndBind(\n            [1024, graph.incomingWireGroupsLen.length >> 10], gl.R8UI, gl.RED_INTEGER, gl.UNSIGNED_BYTE, graph.incomingWireGroupsLen\n        );\n        this.incomingWireGroupsLenIdx = textureId;\n        textureId++;\n\n        gl.activeTexture(gl.TEXTURE0 + textureId);\n        this.wireStatesCurrTex = this.ctx.textureCreateAndBind(\n            [128, graph.wireStates.length >> 7], gl.R8UI, gl.RED_INTEGER, gl.UNSIGNED_BYTE, new Uint8Array(graph.wireStates)\n        );\n        this.wireStatesCurrIdx = textureId;\n        textureId++;\n\n        gl.activeTexture(gl.TEXTURE0 + textureId);\n        this.wireStatesNextTex = this.ctx.textureCreateAndBind(\n            [128, graph.wireStates.length >> 7], gl.R8UI, gl.RED_INTEGER, gl.UNSIGNED_BYTE, null\n        );\n        this.wireStatesNextIdx = textureId;\n        textureId++;\n\n        const triangleCovering = new Float32Array([\n            -1.0, -1.0,   3.0, -1.0,  -1.0,  3.0,\n        ]);\n        const triangleCoveringBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleCoveringBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, triangleCovering, gl.STATIC_DRAW);\n        gl.vertexAttribPointer(<any>this.a_triangleCoordinates, 2, gl.FLOAT, false, 0, 0); // TODO: Type safety\n        gl.enableVertexAttribArray(<any>this.a_triangleCoordinates); // TODO: Type safety\n    };\n\n    animate(now: number = null) { // TODO: This is getting refactored anyway\n        const gl = this.ctx.gl;\n\n        gl.useProgram(this.renderProgram);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, this.width, this.height);\n        gl.uniform1f(this.u_render_scale, this.scale);\n        gl.uniform2f(this.u_render_offset, this.offset, this.offset);\n        gl.uniform1i(this.u_render_wireStates, this.wireStatesCurrIdx);\n        gl.uniform1i(this.u_render_imageDecoder, this.imageDecoderIdx);\n        gl.uniform1i(this.u_render_imageDecoderExtra, this.imageDecoderExtraIdx);\n        gl.drawArrays(gl.TRIANGLES, 0, 3);\n\n        this.offset += 4 * this.scale;\n        this.scale *= this.mul;\n        if (this.scale > 1) {\n            this.mul = 0.9999 / this.mul;\n        } else if (this.scale < 0.1) {\n            this.mul = 1.0001 / this.mul;\n        }\n\n        gl.useProgram(this.stepProgram);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        gl.viewport(0, 0, 128, this.numWires >> 7);\n        gl.uniform1i(this.u_step_incomingWires, this.incomingWiresIdx);\n        gl.uniform1i(this.u_step_incomingWireGroupsOff, this.incomingWireGroupsOffIdx);\n        gl.uniform1i(this.u_step_incomingWireGroupsLen, this.incomingWireGroupsLenIdx);\n    }\n\n    step() {\n        const gl = this.ctx.gl;\n\n        this.n++;\n        let now = performance.now();\n        if (now - this.t > 100){\n            document.getElementById(\"fps\").innerHTML = (\n                Number.parseFloat(document.getElementById(\"fps\").innerHTML) / 2 + this.n * (1000 / (now - this.t)) / 2\n            ).toString();\n            this.t = now;\n            this.n = 0;\n        }\n\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.wireStatesNextTex, 0);\n        gl.uniform1i(this.u_step_wireStates, this.wireStatesCurrIdx);\n        gl.drawArrays(gl.TRIANGLES, 0, 3);\n\n        [this.wireStatesCurrTex, this.wireStatesNextTex] = [this.wireStatesNextTex, this.wireStatesCurrTex];\n        [this.wireStatesCurrIdx, this.wireStatesNextIdx] = [this.wireStatesNextIdx, this.wireStatesCurrIdx];\n\n        let newSync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n        if (this.sync.length > 3) {\n            let s = this.sync.shift();\n            while(gl.clientWaitSync(s, 0, 0) == gl.TIMEOUT_EXPIRED) {}\n            gl.deleteSync(s);\n        }\n        this.sync.push(newSync);\n    }\n};\n","import { pause } from '../utils/setZeroTimeout';\n\nexport interface GpuRepresentation {\n    wireStates: Uint8Array;\n    incomingWires: Uint32Array;\n    incomingWireGroupsOff: Uint32Array;\n    incomingWireGroupsLen: Uint8Array;\n    imageDecoder: Uint32Array;\n    imageDecoderExtra: Uint32Array;\n}\n\nfunction getKind(data: Uint8ClampedArray, idx: number) {\n    const r = data[idx + 0];\n    const g = data[idx + 1];\n    const b = data[idx + 2];\n    const rgb = (r << 16) | (g << 8) | (b << 0);\n\n    // LineLogic 2 includes protection and\n    // goals. Protection and wires are orthogonal,\n    // whereas a goal is *always* accompanied\n    // by a protected wire.\n    //\n    // Goals do not seem worth the implementation\n    // effort; avoiding any cost to the GPU\n    // iteration is likely to be non-trivial.\n    // Protection is easy, but I'm unconvinced\n    // that it's worthwhile, and it would be\n    // deprecated by a higher-level UI anyway.\n\n    // no signal (wire, goal, protected wire)\n    if ((rgb === 0x0080FF) || rgb === 0x800000 || rgb === 0x00FFFF) {\n        return 0b01;\n    }\n\n    // signal, any direction (wire or goal, protected wire)\n    if ((rgb & 0xFF7FF0) === 0xFF0000 || (rgb & 0xFFFFF0) === 0xFFFF00) {\n        return 0b11;\n    }\n\n    // no wire, anything else\n    return 0b00;\n}\n\nasync function imageToGpuRepresentation(data: Uint8Array, width: number, height: number, numWires: number): Promise<GpuRepresentation> {\n    // Loops aside, trace *only* from ends.\n    // No stack is needed for this, since it's always a\n    // single one-way traversal.\n    //\n    // When doing so,\n    //\n    //   * OR all the signals together and\n    //     push to the wire states array.\n    //\n    //   * Record all input T-junctions to the line,\n    //     and push each pair to the transition map.\n    //\n    //   * Map the values in the pixels to the\n    //     wire states array location.\n    //\n    // Finally, check for unhandled pixels, aka. loops.\n    //\n    // Afterwards, use the mapping to remap the\n    // transition map to the correct location in the\n    // wire states array, and turn it into an indexed\n    // mapping.\n\n    const size = width * height;\n    numWires = (numWires + 1024) & ~1023;\n\n    // Is each wire on or off?\n    // The preallocated length is massively pessimistic.\n    // An extra state is reserved at the beginning to dump state into.\n    let wireStatesN = 1;\n    const wireStates = new Uint8Array(numWires);\n\n    // TODO\n    let incomingWiresN = 0;\n    const incomingWires = new Uint32Array(numWires * 2);\n    const incomingWireGroupsOff = new Uint32Array(numWires >> 3);\n    const incomingWireGroupsLen = new Uint8Array(numWires);\n\n    // Which wire does each pixel get its value from?\n    const imageDecoder = new Uint32Array(size);\n\n    // Extra information for wire crossings.\n    // This only stores horizontal wires, because they can change\n    // at most once every four wires.\n    const imageDecoderExtra = new Uint32Array(Math.ceil(size >> 2));\n\n    function traverseFrom(data: Uint8Array, width: number, height: number, i: number, j: number) {\n        const idx = (i + 1) + (j + 1) * (width + 2);\n        const kind  = data[idx];\n        const up    = data[idx - (width + 2)] & 1;\n        const down  = data[idx + (width + 2)] & 1;\n        const left  = data[idx - 1] & 1;\n        const right = data[idx + 1] & 1;\n        const numSiblings = up + down + left + right;\n\n        if (numSiblings === 2 || numSiblings === 4) {\n            // Only start traversals from ends.\n            return;\n        }\n\n        // End #1\n        let wireActive = (kind >> 1) & (numSiblings != 3 ? 1 : 0);\n        imageDecoder[i + j * width] = wireStatesN;\n        if ((wireStatesN & 7) == 0) {\n            incomingWireGroupsOff[wireStatesN >> 3] = incomingWiresN;\n        }\n\n        let [m, n] = [i, j];\n        let [dm, dn] = [0, 0];\n\n        if (numSiblings === 0) {\n            wireStates[wireStatesN] = wireActive;\n            wireStatesN++;\n            return;\n        } else if (numSiblings === 1) {\n            // Go towards the filled pixel\n            if      (up)    { dn = -1; }\n            else if (down)  { dn = +1; }\n            else if (left)  { dm = -1; }\n            else if (right) { dm = +1; }\n            else            { throw 1; }\n        } else {\n            // Go away from the empty pixel\n            if      (!up)    { dn = +1; }\n            else if (!down)  { dn = -1; }\n            else if (!left)  { dm = +1; }\n            else if (!right) { dm = -1; }\n            else             { throw 2; }\n        }\n\n        while (true) {\n            [m, n] = [m + dm, n + dn];\n            const mnIdx = m + n * width;\n\n            const straight = data[(m + dm + 1) + (n + dn + 1) * (width + 2)] & 1;\n            const left     = data[(m - dn + 1) + (n + dm + 1) * (width + 2)] & 1;\n            const right    = data[(m + dn + 1) + (n - dm + 1) * (width + 2)] & 1;\n\n            if (straight) {\n                // The line continues\n                if (left && right) {\n                    // Don't cross the streams!\n                    if (dm != 0) {\n                        imageDecoderExtra[mnIdx >> 2] = wireStatesN;\n                    } else {\n                        imageDecoder[mnIdx] = 0x80000000 | wireStatesN;\n                    }\n                } else if (left) {\n                    incomingWires[incomingWiresN] = mnIdx;\n                    incomingWiresN++;\n                    incomingWireGroupsLen[wireStatesN]++;\n                } else if (right) {\n                    incomingWires[incomingWiresN] = mnIdx;\n                    incomingWiresN++;\n                    incomingWireGroupsLen[wireStatesN]++;\n                } else {\n                    wireActive |= data[(m + 1) + (n + 1) * (width + 2)] >> 1;\n                    imageDecoder[mnIdx] = wireStatesN;\n                }\n            } else if (left === right) {\n                // End here\n                wireActive |= (data[(m + 1) + (n + 1) * (width + 2)] >> 1) & (left ? 0 : 1);\n                imageDecoder[mnIdx] = wireStatesN\n                wireStates[wireStatesN] = wireActive;\n                wireStatesN++;\n                return;\n            } else {\n                wireActive |= data[(m + 1) + (n + 1) * (width + 2)] >> 1;\n                imageDecoder[mnIdx] = wireStatesN\n                if (left) {\n                    [dm, dn] = [-dn, +dm];\n                } else {\n                    [dm, dn] = [+dn, -dm];\n                }\n            }\n        }\n    }\n\n    for (let j = 0; j < height; j++) {\n        for (let i = 0; i < width; i++) {\n            if (!data[(i + 1) + (j + 1) * (width + 2)]) {\n                continue;\n            }\n            if (imageDecoder[i + j * width] != 0) {\n                continue;\n            }\n\n            traverseFrom(data, width, height, i, j);\n        }\n\n        if (j % 10 == 0) {\n            document.getElementById(\"fps\").innerHTML = j.toString();\n            await pause();\n        }\n    }\n\n    function traverseLoopsFrom(data: Uint8Array, width: number, height: number, i: number, j: number) {\n        const idx = (i + 1) + (j + 1) * (width + 2);\n        const kind  = data[idx];\n        const up    = data[idx - (width + 2)] & 1;\n        const down  = data[idx + (width + 2)] & 1;\n        const left  = data[idx - 1] & 1;\n        const right = data[idx + 1] & 1;\n        const numSiblings = up + down + left + right;\n\n        if (numSiblings !== 2) {\n            // Only loops should be missing!\n            throw 3;\n        }\n\n        // Loop \"start\"; stop when reached again.\n        let wireActive = kind >> 1;\n        imageDecoder[i + j * width] = wireStatesN;\n        if ((wireStatesN & 7) == 0) {\n            incomingWireGroupsOff[wireStatesN >> 3] = incomingWiresN;\n        }\n\n        let [m, n] = [i, j];\n        let [dm, dn] = [0, 0];\n\n        // Any side will do right now.\n        if      (up)   { dn = -1; }\n        else if (down) { dn = +1; }\n        else           { dm = -1; }\n\n        while (true) {\n            [m, n] = [m + dm, n + dn];\n            const mnIdx = m + n * width;\n\n            if (m == i && n == j) {\n                // Back to the future.\n                wireStates[wireStatesN] = wireActive;\n                wireStatesN++;\n                return;\n            }\n\n            const straight = data[(m + dm + 1) + (n + dn + 1) * (width + 2)] & 1;\n            const left     = data[(m - dn + 1) + (n + dm + 1) * (width + 2)] & 1;\n            const right    = data[(m + dn + 1) + (n - dm + 1) * (width + 2)] & 1;\n\n            if (straight) {\n                // The line continues\n                if (left && right) {\n                    // Don't cross the streams!\n                    imageDecoderExtra[mnIdx >> 2] = imageDecoder[mnIdx]\n                    imageDecoder[mnIdx] = wireStatesN;\n                } else if (left) {\n                    incomingWires[incomingWiresN] = mnIdx;\n                    incomingWiresN++;\n                    incomingWireGroupsLen[wireStatesN]++;\n                } else if (right) {\n                    incomingWires[incomingWiresN] = mnIdx;\n                    incomingWiresN++;\n                    incomingWireGroupsLen[wireStatesN]++;\n                } else {\n                    wireActive |= data[(m + 1) + (n + 1) * (width + 2)] >> 1;\n                    imageDecoder[mnIdx] = wireStatesN;\n                }\n            } else if (left === right) {\n                // Impossibru!\n                throw 4;\n            } else {\n                wireActive |= data[(m + 1) + (n + 1) * (width + 2)] >> 1;\n                imageDecoder[mnIdx] = wireStatesN\n                if (left) {\n                    [dm, dn] = [-dn, +dm];\n                } else {\n                    [dm, dn] = [+dn, -dm];\n                }\n            }\n        }\n    }\n\n    for (let j = 0; j < height; j++) {\n        for (let i = 0; i < width; i++) {\n            if (!data[(i + 1) + (j + 1) * (width + 2)]) {\n                continue;\n            }\n            if (imageDecoder[i + j * width] != 0) {\n                continue;\n            }\n\n            traverseLoopsFrom(data, width, height, i, j);\n        }\n\n        if (j % 10 == 0) {\n            document.getElementById(\"fps\").innerHTML = j.toString();\n            await pause();\n        }\n    }\n\n    for (let i = 0; i < incomingWiresN; i++) {\n        incomingWires[i] = imageDecoder[incomingWires[i]];\n    }\n\n    let groupStart = 0;\n    for (let i = 0; i < wireStatesN; i++) {\n        let groupLength = incomingWireGroupsLen[i];\n\n        let incoming = incomingWires.slice(groupStart, groupStart + groupLength);\n        incoming.sort();\n        incomingWires.set(incoming, groupStart);\n\n        groupStart += groupLength;\n    }\n\n    // Round up to multiple of width so we can have less-skew textures.\n    const packedWireStatesN = ((wireStatesN >> 3) + 1023) & ~1023;\n    wireStatesN = (wireStatesN + 1023) & ~1023;\n    incomingWiresN = (incomingWiresN + 1023) & ~1023;\n\n    let packedWireStates = new Uint8Array(packedWireStatesN)\n    for (let i = 0; i < wireStatesN / 8; i++) {\n        for (let j = 0; j < 8; j++) {\n            packedWireStates[i] |= wireStates[i * 8 + j] << j;\n        }\n    }\n\n    return {\n        wireStates: packedWireStates,\n        incomingWires: incomingWires.slice(0, incomingWiresN),\n        incomingWireGroupsOff: incomingWireGroupsOff.slice(0, wireStatesN >> 3),\n        incomingWireGroupsLen: incomingWireGroupsLen.slice(0, wireStatesN),\n        imageDecoder: imageDecoder,\n        imageDecoderExtra: imageDecoderExtra\n    };\n}\n\nfunction bootstrapInner(img: HTMLImageElement): [Uint8Array, number, number, number] {\n    const width = img.naturalWidth;\n    const height = img.naturalHeight;\n\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    const context = canvas.getContext('2d');\n    context.drawImage(img, 0, 0);\n    const pixels = context.getImageData(0, 0, width, height).data;\n\n    let numWires = 0;\n    const predecoded = new Uint8Array((width + 2) * (height + 2));\n    for (let j = 0; j < height; j++) {\n        for (let i = 0; i < width; i++) {\n            const kind = getKind(pixels, (i + (height - 1 - j) * width) * 4);\n            numWires += kind === 0 ? 0 : 1;\n            predecoded[(i + 1) + (j + 1) * (width + 2)] = kind;\n            predecoded[(i + 1) + (j + 1) * (width + 2)] = kind;\n        }\n    }\n\n    return [predecoded, width, height, numWires];\n}\n\nexport function bootstrapFromImageTag(img: HTMLImageElement) {\n    // Extract to allow collections of temporaries.\n    const [predecoded, width, height, numWires] = bootstrapInner(img);\n    return imageToGpuRepresentation(predecoded, width, height, numWires);\n}\n","// From https://dbaron.org/log/20100309-faster-timeouts\n\nconst timeouts: (() => void)[] = [];\nconst messageName = \"zero-timeout-message\";\n\n// Like setTimeout, but only takes a function argument.  There's\n// no time argument (always zero) and no arguments (you have to\n// use a closure).\nexport function setZeroTimeout(fn: () => void) {\n    timeouts.push(fn);\n    window.postMessage(messageName, \"*\");\n}\n\nfunction handleMessage(event: MessageEvent) {\n    if (event.source === window && event.data === messageName) {\n        event.stopPropagation();\n        if (timeouts.length > 0) {\n            const fn = timeouts.shift();\n            fn();\n        }\n    }\n}\n\nwindow.addEventListener(\"message\", handleMessage, true);\n\nexport function pause(): Promise<undefined> {\n    return new Promise(resolve => setZeroTimeout(resolve));\n}\n","export class Gpu {\n    gl: WebGL2RenderingContext;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.gl = canvas.getContext(\"webgl2\", {\"antialias\": false});\n        // TODO: Error handling\n    }\n\n    compileShader(shaderSource: string, kind: number) {\n        const shader = this.gl.createShader(kind);\n        this.gl.shaderSource(shader, shaderSource);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            throw new Error(\"Shader compilation failed:\\n\\t\" + this.gl.getShaderInfoLog(shader));\n        }\n        return shader;\n    }\n\n    createProgram(vertexShader: string, fragmentShader: string) {\n        const program = this.gl.createProgram();\n        this.gl.attachShader(program, this.compileShader(vertexShader, this.gl.VERTEX_SHADER));\n        this.gl.attachShader(program, this.compileShader(fragmentShader, this.gl.FRAGMENT_SHADER));\n        this.gl.linkProgram(program);\n\n        if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n            throw new Error(\"Program linking failed:\\n\\t\" + this.gl.getProgramInfoLog(program));\n        }\n        return program;\n    }\n\n    textureCreateAndBind([width, height]: [number, number], internalformat: number, format: number, type: number, pixels: TypedArray, disableInterpolation = true) {\n        const texture = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, internalformat, width, height, 0, format, type, pixels);\n\n        if (disableInterpolation) {\n            this.textureDisableInterpolation();\n        }\n\n        // TODO: Error handling\n        return texture;\n    }\n\n    textureDisableInterpolation() {\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    }\n};\n"],"names":[],"mappings":"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"}